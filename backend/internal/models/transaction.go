package models

import "time"

// Transaction represents a single spending record
// Date should be provided as an ISO date string (YYYY-MM-DD)
// ID is generated by the server

type Transaction struct {
	ID          string  `json:"id"`
	Amount      float64 `json:"amount"`
	Category    string  `json:"category"`
	Date        string  `json:"date"`
	Description string  `json:"description"`
}

// Validate performs basic validation on a Transaction payload (without ID)
func (t *Transaction) Validate() error {
	if t.Amount <= 0 {
		return ErrInvalidAmount
	}
	if t.Category == "" {
		return ErrInvalidCategory
	}
	if t.Date == "" {
		return ErrInvalidDate
	}
	if _, err := time.Parse("2006-01-02", t.Date); err != nil {
		return ErrInvalidDate
	}
	return nil
}
